#!/bin/sh

if [ "$1" == "--help" ]
then
   echo "Usage:"
   echo "   UpdateEnvironment [ <cvs-account> [ <local-account> ] ]"
   echo
   echo "Run this on an empty directory to create the"
   echo "GoboLinux LiveCD mastering environment."
   echo "It will fetch all needed files off the network"
   echo "and create the proper directory layout."
   echo "If you have CVS write access, pass your savannah"
   echo "username as a parameter and, optionally,"
   echo "the username in the current machine"
   echo "which holds your savannah SSH credentials,"
   echo "if it is not the same as your savannah username."
   echo
   exit 0
fi

root=$PWD
datadir="/Programs/BuildLiveCD/Current/Data"

#############################################################################
# Tarballs ("Archives")
#############################################################################
echo "=> Downloading archives..."

function get_md5() {
   md5sum "$1" 2>/dev/null | awk '{print $1}'
}

function check_and_dl() {
   url="$1"
   md5="$2"
   urlbn=`basename $url`
   downloadtarget="$root/Archives"
   localfile="$downloadtarget/$urlbn"
   localmd5=`get_md5 "$localfile"`
   if ! [ "$localmd5" = "$md5" ]
   then
      rm -f  "$localfile"
      (cd $downloadtarget; wget -c $url)
      localmd5=`get_md5 "$localfile"`
      if ! [ "$localmd5" = "$md5" ]
      then
         echo "Failed fetching file with expected md5 sum."
         echo "Expected md5: $md5"
         echo "     Got md5: $localmd5"
         echo "Press Enter to continue or Ctrl+C to abort."
         read
      fi
   fi
}

(
   cd $datadir
   [ -d CVS ] && cvs up -dP
)

arch=i686
mkdir -p Archives
cat $datadir/Packages-Devel-$arch | while read url md5
do
   echo $url
   check_and_dl $url $md5
done


#############################################################################
# LocalCVS
#############################################################################
echo "=> Updating local CVS copy..."

if [ "$1" ]
then
   cvsuser="$1"
   if [ "$2" ]
   then localuser="$2"
   else localuser="$1"
   fi
else
   cvsuser=anonymous
fi

mkdir -p $root/LocalCVS/
cd $root/LocalCVS/

if [ -e $datadir/Packages-List-GoboLinuxTools-CVS ]
then tools="`cat $datadir/Packages-List-GoboLinuxTools-CVS` InitRDScripts"
else tools="InitRDScripts"
fi

for cvsrepo in files `for x in $tools; do echo tools/$x; done`
do
   if [ "$cvsuser" = "anonymous" ]
   then
      if [ -e "$cvsrepo" ]
      then
         echo "Updating $cvsrepo..."
         cd $cvsrepo
         cvs -q up -dP
         cd - &> /dev/null
      else
         echo "Getting $cvsrepo..."
         cvs -d :pserver:anonymous@cvs.sv.gnu.org:/sources/goboscripts -q co $cvsrepo
      fi
   else
      if [ -e "$cvsrepo" ]
      then
         echo "Updating $cvsrepo..."
         sudo -H -u $localuser bash -c "cd '$cvsrepo' && cvs -q up -dP"
      else
         echo "Getting $cvsrepo..."
         export CVS_RSH=ssh
         chown $localuser .
         sudo -H -u $localuser cvs -d :ext:$cvsuser@cvs.sv.gnu.org:/sources/goboscripts -q co $cvsrepo
      fi
   fi
done

rm -rf files/Documentation

#############################################################################
# Packages
#############################################################################
echo "=> Fetching remote packages..."
rsync --times --perms --delete --verbose --progress -r -L gobo.calica.com::gobolinux-packages/livecd/ $root/Packages/

echo "=> Done."
