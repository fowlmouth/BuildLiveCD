#!/bin/sh -e

function die() {
   echo "$@"
   exit 1
}

if [ "$1" == "--help" ]
then
   echo "Usage:"
   echo "   MakeInitRDTree"
   echo
   echo "Run this inside the GoboLinux LiveCD mastering environment"
   echo "to rebuild the InitRD tree."
   echo
   exit 0
fi

if [ "$UID" != 0 ]
then
   echo "Must be run as superuser."
   exit 1
fi

root=$PWD/Output/InitRD
archives=$PWD/Archives/

rm -rf $root

mkdir -p $root

####################################################
# Fetch packages
####################################################

today=`date +%Y%m%d`
arch=`uname -m`

packages=(
   BusyBox-InitRD--20060202-SVN--$arch.tar.bz2
   MiniUdev--0.1--$arch.tar.bz2
   InitRDScripts--$today--$arch.tar.bz2
)

cd $root

####################################################
# Directory structure
####################################################

mkdir -p $root/Mount
mkdir -p $root/Mount/HD0
mkdir -p $root/Mount/HD1
mkdir -p $root/Mount/HD2
mkdir -p $root/Mount/Floppy
mkdir -p $root/Mount/.Pivot
mkdir -p $root/Mount/TmpFS
mkdir -p $root/Mount/UnionFS
mkdir -p $root/Mount/SquashFS
mkdir -p $root/Mount/SquashFS/Rest
mkdir -p $root/Mount/SquashFS/Files
for i in /Programs/BuildLiveCD/Current/Data/Packages-List-*; do
   mkdir $root/Mount/SquashFS/`basename $i .squashfs`
done
mkdir -p $root/Mount/CD-ROM
mkdir -p $root/Users
mkdir -p $root/Users/gobo
mkdir -p $root/System
mkdir -p $root/System/Links
mkdir -p $root/System/Links/Executables
mkdir -p $root/System/Links/Shared
mkdir -p $root/System/Links/Daemons
mkdir -p $root/System/Links/Environment
mkdir -p $root/System/Links/Manuals
mkdir -p $root/System/Links/Libraries
mkdir -p $root/System/Links/Headers
mkdir -p $root/System/Kernel
mkdir -p $root/System/Kernel/Status
mkdir -p $root/System/Kernel/Devices
mkdir -p $root/System/Kernel/Modules
mkdir -p $root/System/Kernel/Objects
mkdir -p $root/System/Settings
mkdir -p $root/System/Variable
mkdir -p $root/System/Variable/tmp
mkdir -p $root/Programs

####################################################
# Legacy tree
####################################################

ln -nfs System/Links/Executables $root/bin
ln -nfs System/Links/Executables $root/sbin
ln -nfs System/Settings $root/etc
ln -nfs System/Variable/tmp $root/tmp
mkdir -p $root/usr
ln -nfs System/Links/Executables $root/bin
ln -nfs System/Links/Executables $root/sbin
ln -nfs System/Kernel/Status $root/proc
ln -nfs System/Kernel/Devices $root/dev
ln -nfs System/Kernel/Objects $root/sys

####################################################
# Some additional links
####################################################

ln -nfs ../../proc/mounts $root/System/Settings/mtab
ln -nfs bin/startGoboLinux $root/linuxrc 

####################################################
# Nano-InstallPackage
####################################################

cd $root/Programs

for package in "${packages[@]}"
do
   echo "Installing $package inside InitRD..."
   tar xjpf $archives/$package || die "Could not install $package."
done

####################################################
# Nano-SymlinkProgram
####################################################

cd $root

ls -d Programs/*/Current/bin/* Programs/*/Current/sbin/* | while read i
do
   ln -nfs ../../../$i System/Links/Executables
done

####################################################
# Populate /System/Kernel/Devices
####################################################

cd $root/System/Kernel/Devices

mknod console c 5 1
mknod hda b 3 0
mknod hdb b 3 64
mknod hdc b 22 0
mknod hdd b 22 64
mkfifo log
mknod loop0 b 7 0
mknod loop1 b 7 1
mknod loop2 b 7 2
mknod loop3 b 7 3
mknod loop4 b 7 4
mknod loop5 b 7 5
mknod loop6 b 7 6
mknod loop7 b 7 7
mknod null c 1 3
mknod ram0 b 1 0
mknod random c 1 8
mknod scd0 b 11 0
mknod scd1 b 11 1
mknod scd2 b 11 2
mknod scd3 b 11 3
mknod scd4 b 11 4
mknod sda b 8 0
mknod sdb b 8 16
mknod sdc b 8 32
mknod sdd b 8 48
mknod tty0 c 4 0
mknod tty1 c 4 1
mknod tty2 c 4 2
mknod tty3 c 4 3
mknod tty4 c 4 4
mknod tty5 c 4 5
mknod tty6 c 4 6
mknod ttyS0 c 4 64
mknod urandom c 1 9

####################################################
# Populate /System/Settings
####################################################

cat <<EOF > $root/System/Settings/fstab
/dev/ram0       /               ext2    defaults         
#/dev/fd0        /               ext2    defaults         
/proc           /System/Kernel/Status           proc    defaults
EOF

cat <<EOF > $root/System/Settings/group
gobo:x:0:
EOF

cat <<EOF > $root/System/Settings/hostname
mini-GoboLinux
EOF

cat <<EOF > $root/System/Settings/inittab

::sysinit:/bin/startGoboLinux
::respawn:-/bin/ash
tty2::askfirst:-/bin/ash
tty3::askfirst:-/bin/ash
tty4::askfirst:-/bin/ash
tty5::askfirst:-/bin/ash
tty6::askfirst:-/bin/ash

::ctrlaltdel:/sbin/reboot
::shutdown:/bin/umount -a -r
::shutdown:/sbin/swapoff -a
EOF

cat <<EOF > $root/System/Settings/passwd
gobo:x:0:0::/Users/gobo:/bin/ash
bin:x:1:1:bin:/bin:
daemon:x:2:2:daemon:/sbin:
sync:x:5:0:sync:/sbin:/bin/sync
uucp:x:10:14:uucp:/var/spool/uucppublic:
nobody:x:99:99:nobody:/:
EOF

cat <<EOF > $root/System/Settings/profile
TERM=linux
PATH="/System/Links/Executables"
#PS1="\w>$"
PS1='\[\033[1;33;41m\]RAMdisk\[\033[1;31;49m\] \w]\[\033[0m\]'
PS2='> '
export TERM PATH PS1 PS2

date +"%d/%m %H:%M:%S"
alias l='ls -l'

if [ $TTY=="/System/Kernel/Devices/tty4" ]
then
   /bin/chroot /Mount/SquashFS /usr/bin/env -i HOME=/Users/gobo TERM=linux /bin/zsh
else
   exec /bin/chroot /Mount/SquashFS /usr/bin/env -i HOME=/Users/gobo TERM=linux /bin/zsh
fi
EOF

cat <<EOF > $root/System/Settings/rc
#!/bin/ash

/bin/mount -av

/bin/startGoboLinux 

EOF
chmod +x $root/System/Settings/rc

cat <<EOF > $root/System/Settings/shadow
gobo::11501:0:::::

bin:*:9797:0:::::
daemon:*:9797:0:::::
sync:*:9797:0:::::
uucp:*:9797:0:::::
nobody:*:9797:0:::::
EOF

cat <<EOF > $root/System/Settings/shells
/bin/sh
/bin/ash
EOF
